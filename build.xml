<!--
  == This software is subject to the terms of the Eclipse Public License v1.0
  == Agreement, available at the following URL:
  == http://www.eclipse.org/legal/epl-v10.html.
  == You must accept the terms of that agreement to use this software.
  ==
  == Copyright (C) 2001-2005 Julian Hyde
  == Copyright (C) 2005-2013 Pentaho and others
  == All Rights Reserved.
  -->
<project name="mondrian" default="all" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property environment="env"/>

  <property name="build.compiler" value="javac1.7"/>

  <property name="project.location" location="${basedir}"/>
  <property name="lib.location" location="${project.location}/lib"/>
  <property file="${project.location}/build.properties"/>
  <property file="${project.location}/test.properties"/>
  <property file="${project.location}/mondrian.properties"/>
  <property name="project.build.debug" value="on"/>
  <property name="testsrc.dir" value="${basedir}/testsrc" />

  <!--
    ===================================================================
    Set the properties related to paths
    ===================================================================
  -->
  <!--
    Set src.dir to an absolute path when building with CruiseControl.
    Otherwise, set it to a relative path.
  -->
  <condition property="src.dir" value="${basedir}/src">
    <isset property="cruisecontrol" />
  </condition>
  <condition property="src.dir" value="src">
    <not>
      <isset property="cruisecontrol" />
    </not>
  </condition>

  <import file="subfloor.xml" />

  <property name="testsrc.dir" value="testsrc"/>
  <property name="testsrc.dir.relative" value="testsrc"/>
  <property name="java.dir" value="${src.dir}/main"/>
  <property name="javatest.dir" value="${testsrc.dir}/main"/>
  <property name="etc.dir" value="${src.dir}/etc"/>
  <property name="lib.dir" value="lib"/>
  <property name="doc.dir" value="doc"/>
  <property name="resource.location" location="resource"/>
  <property name="javadoc.dir" value="${doc.dir}/api"/>
  <property name="classes.dir" value="classes"/>
  <property name="testclasses.dir" value="testclasses"/>
  <property name="testclasses-jdk14.dir" value="testclasses-jdk14"/>
  <property name="build.dir" value="build"/>
  <property name="dist.name" value="${name}-${project.revision}"/>
  <property name="dist.base" value="distribution"/>
  <property name="dist.dir" value="dist"/>
  <property name="demo.dir" value="demo"/>
  <property name="webapp.dir" value="webapp"/>
  <property name="dist.src.file" value="${dist.dir}/${dist.name}-src.zip"/>
  <property name="dist.bin.file" value="${dist.dir}/${dist.name}.zip"/>
  <property name="dist.doc.file" value="${dist.dir}/doc.tar.gz"/>
  <property name="jar.file" value="${lib.dir}/${name}.jar"/>
  <property name="jar-jdk14.file" value="${lib.dir}/${name}-jdk14.jar" />
  <property name="resource.jar.file" value="${lib.dir}/eigenbase-resgen.jar"/>
  <property name="xom.jar.file" value="${lib.dir}/eigenbase-xom.jar"/>
  <property name="jdk.home" value="${env.JAVA_HOME}"/>

  <property name="log4j.configuration" value="log4j.properties" />

  <property name="mondrian.retroweave" value="false"
      description="Tells mondrian to use retroweaver even if the JDK is later than 1.4"/>
  <!--
    Set properties that are needed for the retroweaver tasks
    to run correctly under CruiseControl.
  -->
  <property name="jar.file.location" location="${lib.dir}/${name}.jar"/>
  <property name="jar-jdk14.file.location" location="${lib.dir}/${name}-jdk14.jar" />
  <condition property="in.jar.file" value="${jar.file.location}">
    <isset property="cruisecontrol" />
  </condition>
  <condition property="in.jar.file" value="${jar.file}">
    <not>
      <isset property="cruisecontrol" />
    </not>
  </condition>
  <condition property="out.jar.file" value="${jar-jdk14.file.location}">
    <isset property="cruisecontrol" />
  </condition>
  <condition property="out.jar.file" value="${jar-jdk14.file}">
    <not>
      <isset property="cruisecontrol" />
    </not>
  </condition>
  <condition property="olap4j.in.jar.file" value="${lib.location}/olap4j.jar">
    <isset property="cruisecontrol" />
  </condition>
  <condition property="olap4j.in.jar.file" value="${lib.dir}/olap4j.jar">
    <not>
      <isset property="cruisecontrol" />
    </not>
  </condition>
  <condition property="olap4j.out.jar.file" value="${lib.location}/olap4j-jdk14.jar">
    <isset property="cruisecontrol" />
  </condition>
  <condition property="olap4j.out.jar.file" value="${lib.dir}/olap4j-jdk14.jar">
    <not>
      <isset property="cruisecontrol" />
    </not>
  </condition>

  <property name="generated.java.files" value="
${java.dir}/mondrian/parser/MdxParserImpl.java,
${java.dir}/mondrian/parser/MdxParserImplTokenManager.java,
${java.dir}/mondrian/parser/ParseException.java,
${java.dir}/mondrian/parser/SimpleCharStream.java,
${java.dir}/mondrian/parser/Token.java,
${java.dir}/mondrian/parser/TokenMgrError.java,
${java.dir}/mondrian/olap/Mondrian3Def.java,
${java.dir}/mondrian/olap/MondrianDef.java,
${java.dir}/mondrian/olap/MondrianProperties.java,
${java.dir}/mondrian/resource/MondrianResource*.java,
${java.dir}/mondrian/xmla/DataSourcesConfig*.java,
${java.dir}/mondrian/server/MondrianServerVersion.java
${etc.dir}/mondrian/web/jsp/**/*.java"/>

  <property name="generated.lib.files" value="
${lib.dir}/mondrian.jar,
${jar-jdk14.file},
${lib.dir}/olap4j-jdk14.jar,
${lib.dir}/mondrian.xml,
${lib.dir}/web.xml,
${lib.dir}/index.jsp,
${lib.dir}/*.dtd,
VERSION.txt,
${doc.dir}/properties.html,
mondrian.properties.template"/>

  <property name="obsolete.java.files" value="
mondrian/rolap/RolapSchemaUpgrader.java,
mondrian/rolap/PhysSchemaConverter.java,
mondrian/rolap/HierarchyUsage.java,
mondrian/rolap/RolapCubeUsages.java"/>

  <path id="tajo.libs">
    <fileset dir="${env.TAJO_HOME}">
        <include name="*.jar"/>
        <exclude name="*-tests.jar"/>
    </fileset>
    <fileset dir="${env.TAJO_HOME}/lib">
      <include name="*.jar"/>
    </fileset>
  </path>
  <path id="hadoop.libs">
    <fileset dir="${env.HADOOP_HOME}/share/hadoop/common">
        <include name="*.jar"/>
    </fileset>
    <fileset dir="${env.HADOOP_HOME}/share/hadoop/common/lib">
        <include name="*.jar"/>
    </fileset>
  </path>

  <path id="project.classpath">
    <pathelement location="${lib.dir}/servlet-api.jar"/>
    <pathelement location="${lib.dir}/jsp-api.jar"/>
    <pathelement location="${lib.dir}/commons-dbcp.jar"/>
    <pathelement location="${lib.dir}/commons-collections.jar"/>
    <pathelement location="${lib.dir}/commons-logging.jar"/>
    <pathelement location="${lib.dir}/commons-math.jar"/>
    <pathelement location="${lib.dir}/commons-pool.jar"/>
    <pathelement location="${lib.dir}/commons-vfs.jar"/>
    <pathelement location="${lib.dir}/commons-vfs2.jar"/>
    <pathelement location="${lib.dir}/eigenbase-properties.jar"/>
    <pathelement location="${lib.dir}/eigenbase-resgen.jar"/>
    <pathelement location="${lib.dir}/eigenbase-xom.jar"/>
    <pathelement location="${lib.dir}/log4j.jar"/>
    <pathelement location="${lib.dir}/olap4j.jar"/>
    <pathelement location="${lib.dir}/olap4j-xmlaserver.jar"/>
    <pathelement location="${lib.dir}/xalan.jar"/>
    <pathelement location="${lib.dir}/xercesImpl.jar"/>
    <pathelement location="${lib.dir}/validation-api.jar"/>
    <pathelement path="${env.CLASSPATH}"/>
    <pathelement location="${ant.home}/lib/ant.jar"/>
    <pathelement location="${ant.home}/lib/optional.jar"/>
    <path refid="tajo.libs"/>
    <path refid="hadoop.libs"/>
  </path>

  <path id="project.build.classpath">
    <pathelement location="${classes.dir}"/>
    <path refid="project.classpath"/>
  </path>

  <path id="project.build.test.classpath-jdk15">
    <pathelement location="${classes.dir}"/>
    <path refid="project.classpath"/>
    <pathelement location="${testclasses.dir}"/>
    <fileset dir="${lib.dir}">
      <include name="olap4j-tck.jar"/>
      <include name="olap4j-xmla.jar"/>
      <include name="xmlunit.jar"/>
      <include name="junit.jar"/>
      <include name="mockito-all.jar"/>
    </fileset>
    <!-- this picks up the default log4j.properties -->
    <pathelement path="${basedir}"/>
  </path>

  <path id="project.build.test.classpath-jdk14">
    <pathelement location="${jar-jdk14.file}"/>
    <pathelement location="${lib.dir}/olap4j-jdk14.jar"/>
    <path refid="project.classpath"/>
    <pathelement location="${testclasses-jdk14.dir}"/>
    <fileset dir="${lib.dir}">
      <include name="olap4j-tck.jar"/>
      <include name="olap4j-xmla.jar"/>
      <include name="xmlunit.jar"/>
      <include name="junit.jar"/>
      <include name="xml-apis.jar"/>
    </fileset>
    <pathelement location="${lib.dir}/retroweaver-rt.jar" />
    <pathelement location="${lib.dir}/backport-util-concurrent.jar" />
    <!-- this picks up the default log4j.properties -->
    <pathelement path="${basedir}"/>
  </path>

  <path id="project.bootclasspath.jdk15">
      <pathelement location="${lib.dir}/rt-jdk1.5.jar"/>
  </path>

  <path id="project.bootclasspath.jdk16">
      <pathelement location="${lib.dir}/ctsym-java6.jar"/>
  </path>

  <condition property="jdk" id="jdk" value="jdk14">
    <or>
      <contains string="${java.version}" substring="1.4." />
      <equals arg1="${mondrian.retroweave}" arg2="true" />
    </or>
  </condition>

  <condition property="jdk" id="jdk" value="jdk15">
    <not>
      <or>
        <contains string="${java.version}" substring="1.4." />
        <equals arg1="${mondrian.retroweave}" arg2="true" />
      </or>
    </not>
  </condition>

  <condition property="jdk15.present">
    <contains string="${java.version}" substring="1.5." />
  </condition>

  <condition property="jdk16.present">
    <contains string="${java.version}" substring="1.6." />
  </condition>

  <condition property="jdk16.or.later.present">
    <or>
      <contains string="${java.version}" substring="1.6." />
      <contains string="${java.version}" substring="1.7." />
    </or>
  </condition>

  <condition property="jdk17.present">
    <contains string="${java.version}" substring="1.7." />
  </condition>

  <condition property="jdk17.not.present">
    <not>
      <contains string="${java.version}" substring="1.7." />
    </not>
  </condition>

  <path id="project.build.test.classpath"
      refid="project.build.test.classpath-${jdk}"/>

  <path id="project.test.classpath">
    <path refid="project.build.test.classpath"/>
    <pathelement path="${driver.classpath}"/>
  </path>

  <target name="define-tasks"> <!-- depends="prepare" -->
    <taskdef name="xomgen" classname="org.eigenbase.xom.XOMGenTask">
      <classpath refid="project.classpath"/>
    </taskdef>

    <taskdef name="resgen" classname="org.eigenbase.resgen.ResourceGenTask">
      <classpath refid="project.build.classpath"/>
    </taskdef>
  </target>

  <!--
    ===================================================================
    Properties for running the FoodMart test. (Override them by
    editing test.properties)
    ===================================================================
  -->

  <!-- Comma-separated list of jdbc drivers. Override in test.properties. -->
  <property name="mondrian.jdbcDrivers" value="com.mysql.jdbc.Driver"/>

  <!-- Connect string to the database. Override in test.properties. -->
  <property name="mondrian.foodmart.jdbcURL" value="jdbc:mysql://localhost/foodmart?user=foodmart&amp;password=foodmart"/>

  <!-- Classpath for JDBC drivers. Override in your test.properties. -->
  <property name="driver.classpath" value=""/>

  <!-- URL of the catalog definition. -->
  <property name="mondrian.foodmart.catalogURL"
      value="file:${project.location}/${demo.dir}/FoodMart.mondrian.xml"/>

  <!-- Test class name. -->
  <property name="mondrian.test.Class" value=""/>

  <!-- Test pattern. -->
  <property name="mondrian.test.Name" value=""/>

  <!-- Arguments to the java process spawned by the junit task. -->
  <property name="junit.jvmargs" value="-ea -esa -Xmx1024m"/>

  <target name="help">
    <echo>
      You must specify a specific project target when using the ANT build.
      Targets are one of the following:
      - all
          Cleans, compiles all classes, and runs a simple test.
      - compile
          Compiles functional classes only.
      - clean
          Deletes build output.
      - test
          Runs a simple test.
      - info
          shows configuration info
    </echo>
  </target>

  <target name="info">
  <echo>==============================================================</echo>
  <echo>| Mondrian configuration info                                |</echo>
  <echo>==============================================================</echo>
  <echo>project.location             = ${project.location}</echo>
  <echo>jdk.home                     = ${env.JAVA_HOME}</echo>
  <echo>tajo.home                    = ${env.TAJO_HOME}</echo>
  <echo>hadoop.home                  = ${env.HADOOP_HOME}</echo>
  <echo>log4j.configuration          = ${log4j.configuration}</echo>
  <echo>mondrian.foodmart.catalogURL = ${mondrian.foodmart.catalogURL}</echo>
  <echo>mondrian.foodmart.jdbcURL    = ${mondrian.foodmart.jdbcURL}</echo>
  <echo>mondrian.jdbcDrivers         = ${mondrian.jdbcDrivers}</echo>
  <echo>driver.classpath (additions) = ${driver.classpath}</echo>
  <echo>==============================================================</echo>
  </target>

  <target name="clean">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${lib.dir}" includes="*" excludes="mondrian.xsd,xml-apis.jar"/>
      <fileset dir="${classes.dir}" includes="**/*.class,**/*.properties"/>
      <fileset dir="${testclasses.dir}" includes="**/*.class,**/*.properties"/>
      <fileset dir="." includes="${generated.java.files},${generated.lib.files},VERSION.txt"/>
      <fileset dir="${javadoc.dir}" />
      <fileset dir="${build.dir}" />
      <fileset dir="${testclasses-jdk14.dir}" />
      <fileset dir="${testsrc.dir}" includes="**/*.log.xml"/>
      <fileset dir="${testsrc.dir}" includes="**/*JUnit.java"/>

      <!-- Obsolete files. Still worthwhile cleaning them. -->
      <fileset dir="demo/derby/foodmart"/>
      <fileset dir="${java.dir}" includes="
mondrian/gui/MondrianGuiDef.java,
mondrian/olap/Parser.java,
mondrian/olap/ParserSym.java"/>
      <fileset dir="${java.dir}/mondrian/gui"/>
    </delete>
  </target>

  <target name="clean-deep">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${lib.dir}" includes="*.jar" excludes="xml-apis.jar"/>
      <fileset dir="${classes.dir}"/>
      <fileset dir="${testclasses.dir}"/>
      <fileset dir="${dist.dir}"/>
    </delete>
    <antcall target="clean"/>
  </target>

  <target name="prepare" depends="install-ivy,resolve">
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${testclasses.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${devlib.dir}"/>
    <mkdir dir="${testlib.dir}"/>
    <mkdir dir="${dist.dir}"/>
  </target>

  <target name="resolve" depends="install-ivy" unless="skip.download">
      <!-- Use symbolic links, rather than copying, on unix. -->
      <condition property="symlink" value="true">
          <os family="unix"/>
      </condition>
      <echo message="symlink=${symlink}"/>

      <!-- Mondrian dependencies. -->
      <ivy:resolve file="ivy.xml"/>
      <ivy:retrieve symlink="${symlink}" type="jar"
          pattern="${lib.dir}/[module].[ext]"/>
      <ivy:retrieve symlink="${symlink}" type="source,javadoc"
          pattern="${lib.dir}/[module]-[type].[ext]"/>

      <ivy:resolve file="${ivyfile}" conf="test" />
      <ivy:retrieve conf="test" pattern="${testlib.dir}/[module]-[revision](-[classifier]).[ext]" symlink="${symlink}" />
  </target>

  <target name="cmdrunner" depends="jar">
    <property name="crtmp.dir" location="${build.dir}/tmpcmdrunner"/>
    <mkdir dir="${crtmp.dir}"/>

    <unjar src="${lib.dir}/commons-dbcp.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/commons-collections.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/commons-logging.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/commons-pool.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/commons-vfs.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/eigenbase-properties.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/eigenbase-resgen.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/eigenbase-xom.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/log4j.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/mondrian.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/servlet-api.jar" dest="${crtmp.dir}"/>

    <unjar dest="${crtmp.dir}">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
            <exclude name="**/junit.zip"/>
        </fileset>
    </unjar>

    <unjar dest="${crtmp.dir}">
        <path refid="tajo.libs"/>
        <path refid="hadoop.libs"/>
        <path id="driver.classpath">
          <pathelement path="${driver.classpath}"/>
        </path>
    </unjar>

    <copy file="./log4j.properties" todir="${crtmp.dir}"/>

    <jar destfile="${lib.dir}/cmdrunner.jar" >
      <fileset dir="${crtmp.dir}" >
        <include name="**/*.xml"/>
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
        <include name="META-INF/services/*"/>
      </fileset>

      <manifest>
        <attribute name="Main-Class" value="mondrian.tui.CmdRunner"/>
        <attribute name="Built-By" value="${user.name}"/>
<!--
        <attribute name="Class-Path" value="${jar.classpath}"/>
        <section name="${jar.package}">
          <attribute name="Specification-Title" value="${component.title}"/>
          <attribute name="Specification-Version" value="${component.version}"/>
          <attribute name="Specification-Vendor" value="${company.name}"/>
          <attribute name="Implementation-Title" value="${component.title}"/>
          <attribute name="Implementation-Version" value="${component.build}"/>
          <attribute name="Implementation-Vendor" value="${company.name}"/>
        </section>
-->
      </manifest>
    </jar>

    <delete dir="${crtmp.dir}" quiet="true"/>
  </target>

  <target name="cmdrunner-run" depends="jar,compile.tests">
    <java fork="yes" classpathref="project.test.classpath" classname="mondrian.tui.CmdRunner">
        <sysproperty key="log4j.configuration" value="${log4j.configuration}"/>
        <!-- <arg value="-d"/> -->
    </java>
  </target>


    <target name="all" depends="
compile,
compile.tests"/>

  <target name="compile" depends="
version,
prepare,
parser,
generate.resources,
generate.properties,
def,
compileJdk15,
compileJdk16,
compileJdk17,
copy"/>

  <target name="generate.resources" depends="define-tasks">

    <!-- Compile MondrianException first, so that resgen can use
         reflection on it. -->
    <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.build.classpath"
        includeantruntime="false"
        bootclasspathref="project.bootclasspath.jdk15"
        source="1.5"
        target="1.5">
      <include name="mondrian/olap/MondrianException.java" />
      <include name="mondrian/olap/ResultLimitExceededException.java" />
      <include name="mondrian/olap/InvalidHierarchyException.java" />
      <include name="mondrian/olap/ResourceLimitExceededException.java" />
      <include name="mondrian/olap/NativeEvaluationUnsupportedException.java" />
      <include name="mondrian/olap/QueryCanceledException.java" />
      <include name="mondrian/olap/QueryTimeoutException.java" />
    </javac>

    <resgen
        srcdir="${java.dir}"
        resdir="${classes.dir}"
        style="functor"
        locales="en_US,de_DE,de,es_ES">
      <include name="mondrian/resource/MondrianResource.xml"/>
    </resgen>

  </target>

  <target name="generate.properties">
    <!-- Generate MondrianProperties.java,
         mondrian.properties.template, property.html. -->
    <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.build.classpath"
        includeantruntime="false"
        bootclasspathref="project.bootclasspath.jdk15"
        source="1.5"
        target="1.5">
      <include name="mondrian/util/PropertyUtil.java" />
    </javac>

    <java classpathref="project.build.classpath"
        classname="mondrian.util.PropertyUtil"
        fork="no"/>
  </target>

  <target name="copy">
    <copy file="src/main/mondrian/rolap/aggmatcher/DefaultRules.xml"
        todir="${classes.dir}"/>
    <copy file="VERSION.txt"
            todir="${classes.dir}"/>
    <copy file="src/main/mondrian/rolap/aggmatcher/DefaultRulesSchema.xml"
        todir="${classes.dir}"/>
    <copy todir="${classes.dir}" overwrite="true">
      <fileset
          dir="${java.dir}"
          includes="
META-INF/**,
OSGI-INF/**"/>
    </copy>
    <copy todir="${testclasses.dir}">
      <fileset
          dir="${javatest.dir}"
          includes="
META-INF/**"/>
    </copy>
  </target>

  <target name="compile.tests" depends="info">
    <javac
        srcdir="${javatest.dir}"
        destdir="${testclasses.dir}"
        debug="${project.build.debug}"
        classpathref="project.build.test.classpath"
        includeantruntime="false"
        bootclasspathref="project.bootclasspath.jdk15"
        source="1.5"
        target="1.5">
        <include name="mondrian/**/*.java"/>
    </javac>
  </target>

  <target name="parser" depends="define-tasks">
    <javacc
        target="${java.dir}/mondrian/parser/MdxParser.jj"
        javacchome="${lib.dir}"/>
  </target>

  <target name="def" depends="define-tasks">
    <xomgen
        model="${java.dir}/mondrian/olap/Mondrian3Schema.xml"
        destdir="${java.dir}"
        classname="mondrian.olap.Mondrian3Def"
        dtdname="mondrian3.dtd"/>
    <copy file="${java.dir}/mondrian/olap/mondrian3.dtd"
        todir="${lib.dir}"/>

    <xomgen
        model="${java.dir}/mondrian/olap/MondrianSchema.xml"
        destdir="${java.dir}"
        classname="mondrian.olap.MondrianDef"
        dtdname="mondrian.dtd"/>
    <copy file="${java.dir}/mondrian/olap/mondrian.dtd"
        todir="${lib.dir}"/>

    <xomgen
        model="${java.dir}/mondrian/rolap/aggmatcher/DefaultRulesSchema.xml"
        destdir="${java.dir}"
        classname="mondrian.rolap.aggmatcher.DefaultDef"
        dtdname="aggregates.dtd"/>
    <copy file="${java.dir}/mondrian/rolap/aggmatcher/aggregates.dtd"
        todir="${lib.dir}"/>

    <xomgen
        model="${java.dir}/mondrian/xmla/DataSourcesConfig.xml"
        destdir="${java.dir}"
        classname="mondrian.xmla.DataSourcesConfig"
        dtdname="datasourcesconfig.dtd"/>
    <copy file="${java.dir}/mondrian/xmla/datasourcesconfig.dtd"
        todir="${lib.dir}"/>
  </target>

  <!-- Before you run it, you will need to set the
       "mondrian.jdbcDrivers", "mondrian.foodmart.jdbcURL", and
       "mondrian.foodmart.catalogURL" properties. The easiest way to
       do this is to edit the file "test.properties". -->

  <target name="set.connectString">
    <!-- Ensure that the JdbcUser parameter is only added to the connect string
         if the mondrian.foodmart.jdbcUser property is set. Likewise
         JdbcPassword. -->
    <condition property="jdbcUser"
        value=";JdbcUser='${mondrian.foodmart.jdbcUser}'">
      <isset property="mondrian.foodmart.jdbcUser"/>
    </condition>
    <condition property="jdbcUser" value="">
      <not>
        <isset property="mondrian.foodmart.jdbcUser"/>
      </not>
    </condition>
    <condition property="jdbcPassword"
        value=";JdbcPassword='${mondrian.foodmart.jdbcPassword}'">
      <isset property="mondrian.foodmart.jdbcPassword"/>
    </condition>
    <condition property="jdbcPassword" value="">
      <not>
        <isset property="mondrian.foodmart.jdbcPassword"/>
      </not>
    </condition>
    <property name="mondrian.test.connectString"
        value="Provider=mondrian;Jdbc='${mondrian.foodmart.jdbcURL}'${jdbcUser}${jdbcPassword};Catalog='${mondrian.foodmart.catalogURL}'"/>
  </target>

  <target name="FoodMartTest"
      description="Runs a few queries using the FoodMart schema."
      depends="set.connectString">
    <java classpathref="project.classpath" classname="mondrian.test.Main"
        fork="yes" maxmemory="768m">

      <sysproperty key="mondrian.jdbcDrivers"
          value="${mondrian.jdbcDrivers}"/>
      <sysproperty key="mondrian.test.foodmart.catalogURL"
          value="${mondrian.foodmart.catalogURL}"/>

      <!-- mondrian.test.connectString is the mondrian connect-string.
           Provider must be 'mondrian'. -->
      <sysproperty key="mondrian.test.connectString"
          value="${mondrian.test.connectString}"/>

    </java>
  </target>

  <target name="test"
      description="Runs all JUnit tests."
      depends="compile,compile.tests,set.connectString"
      unless="tests.skip">
    <antcall target="test-nobuild"/>
  </target>

  <target name="cobertura" unless="tests.skip">
    <antcall target="subfloor.cobertura"/>
  </target>

  <target name="cobertura.test-instrumented" unless="tests.skip">
    <antcall target="subfloor.cobertura.test-instrumented"/>
  </target>

	<condition property="tests.skip" value="true">
    <isset property="mondrian.tests.skip"/>
  </condition>

  <target name="test-list">
    <property name="test.args" value="-l"/>
    <antcall target="test-only"/>
  </target>

  <target name="test-nobuild">
    <property name="test.args" value=""/>
    <antcall target="test-only"/>
  </target>

  <target name="test-only"
      depends="set.connectString"
      description="
Runs all JUnit tests, using the given database connection
in {mondrian.foodmart.jdbcURL}."
    unless="tests.skip">
    <echo>Connecting to ${mondrian.foodmart.jdbcURL}</echo>
    <echo>Connect String: ${mondrian.test.connectString}</echo>
    <delete quiet="true">
      <fileset dir="${testsrc.dir}" includes="**/*.log.xml"/>
    </delete>
    <java
        classpathref="project.test.classpath"
        classname="mondrian.test.Main"
        fork="yes"
        maxmemory="2g">
      <arg value="${test.args}"/>
      <jvmarg line="${junit.jvmargs}"/>
      <sysproperty key="log4j.configuration"
          value="${log4j.configuration}"/>
      <sysproperty key="mondrian.jdbcDrivers"
          value="${mondrian.jdbcDrivers}"/>
      <sysproperty key="mondrian.foodmart.jdbcURL"
          value="${mondrian.foodmart.jdbcURL}"/>
      <sysproperty key="mondrian.test.foodmart.catalogURL"
          value="${mondrian.foodmart.catalogURL}"/>
      <sysproperty key="mondrian.test.connectString"
          value="${mondrian.test.connectString}"/>
      <sysproperty key="mondrian.test.Class"
          value="${mondrian.test.Class}"/>
      <sysproperty key="mondrian.test.Name"
          value="${mondrian.test.Name}"/>
      <!-- tests require en_US locale -->
      <sysproperty key="user.language" value="en"/>
      <sysproperty key="user.region" value="US"/>

    </java>
  </target>

  <target name="junit-main" depends="compile,compile.tests,set.connectString" unless="tests.skip">
    <mkdir dir="junit-results"/>
    <junit printsummary="yes" fork="yes" haltonfailure="no" haltonerror="no">
        <classpath>
            <path refid="project.test.classpath"/>
        </classpath>

        <jvmarg line="${junit.jvmargs}"/>

      <sysproperty key="log4j.configuration"
          value="${log4j.configuration}"/>
      <sysproperty key="mondrian.jdbcDrivers"
          value="${mondrian.jdbcDrivers}"/>
      <sysproperty key="mondrian.foodmart.jdbcURL"
          value="${mondrian.foodmart.jdbcURL}"/>
      <sysproperty key="mondrian.test.foodmart.catalogURL"
          value="${mondrian.foodmart.catalogURL}"/>
      <sysproperty key="mondrian.test.connectString"
          value="${mondrian.test.connectString}"/>
      <sysproperty key="mondrian.test.Class"
          value="${mondrian.test.Class}"/>
      <sysproperty key="mondrian.test.Name"
          value="${mondrian.test.Name}"/>
      <!-- tests require en_US locale -->
      <sysproperty key="user.language" value="en"/>
      <sysproperty key="user.region" value="US"/>

        <formatter type="xml" />

        <batchtest fork="yes" todir="junit-results">
            <fileset dir="${testclasses.dir}">
              <include name="mondrian/test/Main.class" />
            </fileset>
        </batchtest>
    </junit>

    <junitreport todir="junit-results">
      <fileset dir="junit-results">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="junit-results/html"/>
    </junitreport>

  </target>

  <target name="junit-cachehit" depends="compile,compile.tests,set.connectString" unless="tests.skip">
    <junit printsummary="yes" fork="yes" haltonfailure="no" haltonerror="no" showoutput="yes">
        <classpath>
            <path refid="project.test.classpath"/>
        </classpath>
        <sysproperty key="log4j.configuration"
          value="${log4j.configuration}"/>
        <sysproperty key="mondrian.jdbcDrivers"
            value="${mondrian.jdbcDrivers}"/>
        <sysproperty key="mondrian.test.connectString"
            value="${mondrian.test.connectString}"/>
        <sysproperty key="mondrian.test.foodmart.catalogURL"
            value="${mondrian.foodmart.catalogURL}"/>
        <formatter type="xml" />
        <batchtest fork="yes">
            <fileset dir="${testclasses.dir}">
              <include name="mondrian/test/CacheHitTest.class" />
            </fileset>
        </batchtest>
    </junit>
  </target>

  <target name="junit-cvconcurrent" depends="compile,compile.tests,set.connectString" unless="tests.skip">
    <junit printsummary="yes" fork="yes" haltonfailure="no" haltonerror="no" showoutput="yes">
        <classpath>
            <path refid="project.test.classpath"/>
        </classpath>
        <sysproperty key="log4j.configuration"
          value="${log4j.configuration}"/>
        <sysproperty key="mondrian.jdbcDrivers"
            value="${mondrian.jdbcDrivers}"/>
        <sysproperty key="mondrian.test.connectString"
            value="${mondrian.test.connectString}"/>
        <sysproperty key="mondrian.test.foodmart.catalogURL"
            value="${mondrian.foodmart.catalogURL}"/>
        <formatter type="xml" />
        <batchtest fork="yes">
            <fileset dir="${testclasses.dir}">
              <include name="mondrian/test/CVConcurrentMdxTest.class" />
            </fileset>
        </batchtest>
    </junit>
  </target>

  <macrodef name="genJUnit">
    <attribute name="path"/>
    <attribute name="packagename"/>
    <attribute name="testname"/>
    <sequential>
      <xslt style="${testsrc.dir}/xsl/generateDiffRepositoryJUnit.xsl"
        in="@{path}@{testname}.ref.xml"
        out="@{path}@{testname}JUnit.java">
        <param name="reffile"
          expression="${testsrc.dir}/main/mondrian/test/clearview/@{testname}.ref.xml"/>
        <param name="packagename"
          expression="@{packagename}"/>
        <param name="classname"
          expression="@{testname}JUnit"/>
      </xslt>
    </sequential>
  </macrodef>

  <target name="generateDiffRepositoryJUnit"
    description="Generates explicit Java testcases from .ref.xml files">

    <!-- generate clearview junit code files -->
    <property name="path" value="${testsrc.dir}/main/mondrian/test/clearview/"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="CVBasicTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="MetricFilterTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="MiscTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="PredicateFilterTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="SummaryTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="SummaryMetricPercentTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="TopBottomTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="GrandTotalTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="SubTotalTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="BatchedFillTest"/>
    <genJUnit path="${path}" packagename="mondrian.test.clearview" testname="HangerDimensionTest"/>
  </target>

  <target name="etags">
    <exec dir="${project.location}" executable="find" output="javaFiles">
      <arg line=". -name &quot;*.java&quot; -print"/>
    </exec>
    <exec dir="${project.location}" executable="ctags">
      <arg line="-e"/>
      <arg line="-L javaFiles"/>
    </exec>
    <delete file="${project.location}/javaFiles" quiet="true"/>
  </target>

  <target name="version">
    <exec executable="git" outputproperty="git.commit">
      <arg line="log -n 1 --format=format:%H"/>
    </exec>
    <tstamp>
      <format property="build.time" timezone="UTC" pattern="yyyy/MM/dd HH:mm:ss z"/>
    </tstamp>
    <echo file="VERSION.txt">Title: ${name}
Version: ${project.revision}
VersionMajor: ${project.revision.major}
VersionMinor: ${project.revision.minor}
Vendor: ${vendor}
Git-Latest-Commit: ${git.commit}
Ant-Version: ${ant.version}
Created-By: ${java.version} (${java.vendor})
Built-On: ${build.time}
Built-By: ${user.name}
Built-In: ${user.dir}
</echo>
   <echo file="${java.dir}/mondrian/olap4j/MondrianOlap4jDriverVersion.java">/*
 * Project version information. Generated - do not modify.
 */
package mondrian.olap4j;
/**
 * Version information for the Mondrian olap4j driver. (Generated.)
 */
class MondrianOlap4jDriverVersion {
    static final String NAME = "${driver.name}";
    static final String VERSION = "${driver.version}";
    static final int MAJOR_VERSION = ${driver.version.major};
    static final int MINOR_VERSION = ${driver.version.minor};
    static final String GIT_LATEST_COMMIT =
        "${git.commit}";
}

// End MondrianOlap4jDriverVersion.java</echo>
       <echo file="${java.dir}/mondrian/server/MondrianServerVersion.java">/*
 * Project version information. Generated - do not modify.
 */
package mondrian.server;
/**
 * Version information for Mondrian. (Generated by build)
 */
class MondrianServerVersion {
    static final String VENDOR = "${vendor}";
    static final String NAME = "${name}";
    static final String VERSION = "${project.revision}";
    static final int MAJOR_VERSION = ${project.revision.major};
    static final int MINOR_VERSION = ${project.revision.minor};
}
// End MondrianServerVersion.java</echo>
  </target>

  <target name="srczip" depends="version">
    <mkdir dir="${dist.dir}" />
    <delete file="${dist.src.file}"/>
    <zip
        zipfile="${dist.src.file}"
        update="true">
      <zipfileset
          dir="."
          prefix="${dist.name}"
          includes="
${java.dir}/**/*.properties,
${java.dir}/META-INF/**,
${java.dir}/mondrian/resource/MondrianResource.xml,
${java.dir}/mondrian/olap/MondrianSchema.xml,
${java.dir}/mondrian/olap/Mondrian3Schema.xml,
${java.dir}/mondrian/olap/MondrianProperties.xml,
${java.dir}/mondrian/rolap/aggmatcher/DefaultRules.xml,
${java.dir}/mondrian/rolap/aggmatcher/DefaultRulesSchema.xml,
${java.dir}/mondrian/xmla/DataSourcesConfig.xml,
${java.dir}/**/*.java,
${java.dir}/**/*.jj,
${java.dir}/**/*.gif,
${java.dir}/**/*.png,
${java.dir}/**/*.html,
${lib.dir}/mondrian.xsd,
${testsrc.dir.relative}/queryFiles/**/*.xml,
${testsrc.dir.relative}/**/*.csv,
${testsrc.dir.relative}/**/*.error,
${testsrc.dir.relative}/**/*.java,
${testsrc.dir.relative}/**/*.xml,
${testsrc.dir.relative}/**/*.html,
${testsrc.dir.relative}/**/*.txt,
${testsrc.dir.relative}/**/*.sql,
${webapp.dir}/WEB-INF/*.xml,
${webapp.dir}/**/*.jsp,
${webapp.dir}/WEB-INF/*.xsl,
${webapp.dir}/WEB-INF/*.tld,
${doc.dir}/**/*.css,
${doc.dir}/**/*.gif,
${doc.dir}/**/*.png,
${doc.dir}/**/*.jpeg,
${doc.dir}/**/*.html,
bin/checkFile.awk,
bin/checkFile.sh,
bin/cmdrunner.sh,
bin/cmdrunner.cmd,
bin/run.sh,
misc/**/*.mf,
misc/Meta.xsl,
build.xml,
build.bat,
build.sh,
build.properties,
ivy.xml,
ivysettings.xml,
log4j.properties,
LICENSE.html,
README.txt,
subfloor.xml,
VERSION.txt,
${demo.dir}/FoodMart.mondrian.xml,
${demo.dir}/FoodMart3.mondrian.xml"
          excludes="
${javadoc.dir}/**,
**/_vti*/*,
**/*~,
**/junit-results/**,
${generated.java.files},
doc/deployDoc.sh" />
      <zipfileset
          dir="."
          includes="mondrian.properties.template"
          fullpath="${dist.name}/mondrian.properties" />
    </zip>
  </target>

  <target name="load-foodmart"
        depends="info"
        description="load the foodmart database from the data file using the Mondrian loader. Assumes empty database exists">

    <available classname="${mondrian.jdbcDrivers}"
           classpathref="project.test.classpath" property="driver.present.for.load-foodmart"/>

    <echo message="Driver present: ${driver.present.for.load-foodmart}"/>

    <property name="mondrian.foodmart.loaderBatchSize" value="50" />
    <property name="mondrian.foodmart.jdbcSchema" value="" />

    <java classname="mondrian.test.loader.MondrianFoodMartLoader"
            classpathref="project.test.classpath"
            fork="yes">
        <arg value="-tables"/>
        <arg value="-data"/>
        <arg value="-indexes"/>
        <arg value="-jdbcDrivers=${mondrian.jdbcDrivers}"/>
        <arg value="-outputJdbcURL=${mondrian.foodmart.jdbcURL}"/>
        <arg value="-outputJdbcUser=${mondrian.foodmart.jdbcUser}"/>
        <arg value="-outputJdbcPassword=${mondrian.foodmart.jdbcPassword}"/>
        <arg value="-outputJdbcSchema=${mondrian.foodmart.jdbcSchema}"/>
        <arg value="-outputJdbcBatchSize=${mondrian.foodmart.loaderBatchSize}"/>
    </java>

  </target>

  <target name="release" depends="clean-deep, binzip"/>

  <target name="upload">
    <ftp server="upload.sourceforge.net"
        userid="anonymous"
        password="${user.name}@users.sourceforge.net"
        remotedir="incoming"
        verbose="yes">
      <fileset dir=".">
        <include name="${dist.bin.file}"/>
      </fileset>
    </ftp>
  </target>

  <target name="binzip"
      depends="jar,srczip,javadoc,xml_schema,retroweave">
    <mkdir dir="${dist.dir}" />
    <delete file="${dist.bin.file}"/>
    <zip zipfile="${dist.bin.file}">
      <zipfileset
          dir="."
          prefix="${dist.name}"
          includes="
${doc.dir}/**/*.jpg,
${doc.dir}/**/*.html,
${doc.dir}/**/*.css,
${doc.dir}/**/*.png,
${doc.dir}/api/**/*.xml,
${jar.file},
${jar-jdk14.file},
${lib.dir}/olap4j-jdk14.jar,
${lib.dir}/retroweaver-rt.jar,
lib/*.dtd,
demo/FoodMart.mondrian.xml,
demo/FoodMart3.mondrian.xml,
LICENSE.html,
README.txt,
VERSION.txt"
          excludes="
**/*~,
**/_vti*/*,
**/*.psp,
${doc.dir}/api/src-html/**/*"/>
      <zipfileset
          dir="${dist.dir}"
          prefix="${dist.name}"
          includes="${dist.name}-src.zip"/>
    </zip>
  </target>

  <target name="doczip"
      depends="javadoc-with-ydoc, xml_schema"
      description="Builds a zipfile of the documentation, which can then be
                   deployed to sf.net. See also doc/doc2web.sh.">
    <mkdir dir="${dist.dir}" />
    <tar
        destfile="${dist.doc.file}"
        compression="gzip">
      <tarfileset
          dir="."
          includes="
doc/api/**/*,
doc/**/*.html,
doc/**/*.gif,
doc/**/*.jpg,
doc/**/*.png,
doc/**/*.css,
doc/**/*.xml"
          excludes="
**/*~,
**/_vti*/*,
**/*.psp,
**/*.sh"/>
    </tar>
  </target>

  <target name="checkJdkVersion" unless="jdk17.present">
    <fail message="The 'jar' target (and dependent targets 'release', 'binzip')
must be run under JDK 1.7." />
  </target>

  <target name="compileJdk15">
    <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.build.classpath"
        bootclasspathref="project.bootclasspath.jdk15"
        source="1.5"
        target="1.5"
        includeantruntime="false">
      <include name="mondrian/**/*.java"/>
      <exclude name="${obsolete.java.files}"/>
      <!-- the following files need to be built under JDK 1.6 or 1.7 -->
      <exclude name="mondrian/olap4j/FactoryJdbc4Impl.java"/>
      <exclude name="mondrian/olap4j/FactoryJdbc4Plus.java"/>
      <exclude name="mondrian/olap4j/FactoryJdbc41Impl.java"/>
      <exclude name="mondrian/util/UtilCompatibleJdk16.java"/>
      <exclude name="mondrian/util/UtilCompatibleJdk17.java"/>
    </javac>
  </target>

  <target name="compileJdk16" if="jdk16.or.later.present">
      <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.build.classpath"
        bootclasspathref="project.bootclasspath.jdk16"
        source="1.6"
        target="1.6"
        includeantruntime="false">
      <include name="mondrian/olap4j/FactoryJdbc4Impl.java"/>
      <include name="mondrian/olap4j/FactoryJdbc4Plus.java"/>
      <include name="mondrian/util/UtilCompatibleJdk16.java"/>
    </javac>
  </target>

  <target name="compileJdk17" if="jdk17.present">
      <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.build.classpath"
        source="1.7"
        target="1.7"
        includeantruntime="false">
      <include name="mondrian/olap4j/FactoryJdbc41Impl.java"/>
      <include name="mondrian/util/UtilCompatibleJdk17.java"/>
    </javac>
  </target>

  <target name="jar" depends="version,checkJdkVersion,compile,compile.tests">
    <mkdir dir="${lib.dir}" />
    <jar
        destfile="${jar.file}"
        update="true">
      <zipfileset
          dir="${classes.dir}"
          includes="
**/*.class,
**/*.properties,
**/*.xml,
META-INF/**,
OSGI-INF/**"/>
      <zipfileset
          dir="${testclasses.dir}"
          includes="
mondrian/test/loader/**/*.class,
mondrian/olap4j/MondrianInprocProxy*.class,
mondrian/test/AbstractMondrianOlap4jTester.class,
mondrian/test/MondrianOlap4jTester.class"/>
      <zipfileset
          dir="."
          includes="
LICENSE.html,
README.txt,
VERSION.txt"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <section name="mondrian/olap/">
          <attribute name="Implementation-Title" value="${name}"/>
          <attribute name="Implementation-Version" value="${project.revision}"/>
          <attribute name="Implementation-Vendor" value="${vendor}"/>
        </section>
        <section name="mondrian/server/">
          <attribute name="Implementation-Title" value="${name}"/>
          <attribute name="Implementation-Version" value="${project.revision}"/>
          <attribute name="Implementation-Vendor" value="${vendor}"/>
        </section>
      </manifest>
    </jar>

    <!-- Wrap the jar as a bundle using the BND tool. -->
    <exec executable="java" failonerror="true">
      <arg value="-jar" />
      <arg value="lib/bnd.jar" />
      <arg value="wrap" />
      <arg value="--properties" />
      <arg value="mondrian.bnd" />
      <arg value="--output" />
      <arg value="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar" />
      <arg value="${jar.file}" />
    </exec>
  </target>

  <target name="xml_schema"
      description="Generates xml_schema.html from MondrianSchema.xml">
    <xslt in="src/main/mondrian/olap/MondrianSchema.xml"
        out="doc/xml_schema.html"
        style="misc/Meta.xsl"/>
  </target>

  <target name="javadoc-strict" description="
Generates javadoc as part of the nightly regress,
to make sure that all javadoc references are valid.

Javadoc is known to produce errors against JDK 1.4 and 1.5; it runs
clean against JDK 1.6.">
    <antcall target="javadoc-internal">
      <param name="additionalparam" value=""/>
      <param name="access" value="private"/>
    </antcall>
  </target>

  <target name="javadoc" description="Generates javadoc for release">
    <antcall target="javadoc-internal">
      <param name="additionalparam" value=""/>
      <param name="access" value="package"/>
    </antcall>
  </target>

  <target name="javadoc-internal">
    <mkdir dir="${javadoc.dir}" />
    <delete quiet="true" file="${javadoc.dir}/index.html"/>
    <!-- remove stray package.html files under classes to avoid 'multiple
         sources of package comments' errors -->
    <delete includeEmptyDirs="false" quiet="true">
      <fileset dir="${classes.dir}" includes="**/package.html"/>
      <fileset dir="${testclasses.dir}" includes="**/package.html"/>
    </delete>
    <property name="ps" value="${path.separator}"/>
    <!-- Javadoc gives warnings on JDK 1.5 and JDK 1.6 (due to classes that
         depends on JDBC 4.1) but succeeds with no warnings on JDK 1.7. The
         apparent workaround, to use an embedded <fileset> element, caused more
         problems than it solved. -->
    <javadoc
        sourcepath="${java.dir}${ps}${javatest.dir}"
        maxmemory="1024m"
        classpathref="project.build.test.classpath"
        destdir="${javadoc.dir}"
        packagenames="mondrian.*"
        overview="${java.dir}/overview.html"
        footer="&lt;a href=&quot;http://sourceforge.net/projects/mondrian&quot;&gt;&lt;img src=&quot;http://sflogo.sourceforge.net/sflogo.php?group_id=35302&#38;type=15&quot; width=&quot;150&quot; height=&quot;40&quot; border=&quot;0&quot; alt=&apos;Get Mondrian at SourceForge.net. Fast, secure and free Open Source software downloads&apos;&gt;&lt;/a&gt;"
        author="true"
        source="1.5"
        access="${access}"
        Windowtitle="Mondrian OLAP Engine, version ${project.revision}"
        additionalparam="${additionalparam}"
      >
      <tag name="pre" description="Pre-condition:"
           scope="constructors,methods"/>
      <tag name="post" description="Post-condition:"
           scope="constructors,methods"/>
      <tag name="testcase" description="Test-case:"
           scope="constructors,methods,types"/>
      <link href="http://java.sun.com/javase/7/docs/api/"/>
      <link href="http://www.olap4j.org/api/"/>
      <link href="http://www.junit.org/junit/javadoc/3.8.1/"/>
      <link href="http://java.sun.com/products/servlet/2.2/javadoc/"/>
      <link href="http://www.hydromatic.net/xom/apidocs/"/>
      <link href="http://www.hydromatic.net/resgen/apidocs/"/>
    </javadoc>
    <copy file="${java.dir}/mondrian/olap/MondrianSchema.xml"
        todir="${javadoc.dir}/mondrian/olap"/>
  </target>

  <!-- Generate javadoc with embedded UML diagrams using the yDoc doclet from
       yWorks.com. Set ydoc.home in build.properties, then replace
       ${ydoc.home}/resources/ydoc.license with a full license (free for open
       source use). -->
  <target name="javadoc-with-ydoc"
      description="Generates javadoc for public site; verbose: includes
diagrams and hyperlinks to source code">
    <mkdir dir="${javadoc.dir}" />
    <delete quiet="true" file="${javadoc.dir}/index.html"/>
    <!-- remove stray package.html files under classes to avoid 'multiple
         sources of package comments' errors -->
    <delete includeEmptyDirs="false" quiet="true">
      <fileset dir="${classes.dir}" includes="**/package.html"/>
      <fileset dir="${testclasses.dir}" includes="**/package.html"/>
    </delete>
    <property name="ps" value="${path.separator}"/>
    <javadoc
        sourcepath="${java.dir}"
        maxmemory="1024m"
        classpathref="project.build.test.classpath"
        destdir="${javadoc.dir}"
        packagenames="mondrian.*"
        overview="${java.dir}/overview.html"
        footer="&lt;a href=&quot;http://sourceforge.net/projects/mondrian&quot;&gt;&lt;img src=&quot;http://sflogo.sourceforge.net/sflogo.php?group_id=35302&#38;type=15&quot; width=&quot;150&quot; height=&quot;40&quot; border=&quot;0&quot; alt=&apos;Get Mondrian at SourceForge.net. Fast, secure and free Open Source software downloads&apos;&gt;&lt;/a&gt;"
        author="true"
        source="1.5"
        access="package"
        Windowtitle="Mondrian OLAP Engine, version ${project.revision}"
        additionalparam="-linksource"
      >
      <tag name="pre" description="Pre-condition:"
           scope="constructors,methods"/>
      <tag name="post" description="Post-condition:"
           scope="constructors,methods"/>
      <tag name="testcase" description="Test-case:"
           scope="constructors,methods,types"/>
      <link href="http://java.sun.com/javase/7/docs/api/"/>
      <link href="http://www.olap4j.org/api/"/>
      <link href="http://junit.sourceforge.net/javadoc"/>
      <link href="http://java.sun.com/products/servlet/2.2/javadoc/"/>
      <link href="http://eigenbase.sourceforge.net/resgen/api/"/>
      <link href="http://farrago.sourceforge.net/api/"/>
      <doclet
          name="ydoc.doclets.YStandard"
          path="${ydoc.home}/lib/ydoc.jar${ps}${ydoc.home}/lib/class2svg.jar${ps}${ydoc.home}/resources${ps}${ydoc.home}/doc">
        <param name="-author"/>
        <param name="-generic"/>
        <param name="-umlautogen"/>
        <param name="-tag" value="y.precondition"/>
        <param name="-tag" value="y.postcondition"/>
        <param name="-tag" value="y.complexity"/>
        <param name="-tag" value="param"/>
        <param name="-tag" value="return"/>
        <param name="-tag" value="see"/>
        <param name="-tag" value="y.uml"/>
      </doclet>
    </javadoc>
    <copy file="${java.dir}/mondrian/olap/MondrianSchema.xml"
        todir="${javadoc.dir}/mondrian/olap"/>
  </target>

  <!-- Ensure that javadoc has no warnings/errors. -->
  <target name="checkJavadoc">
    <record name="javadoc-complaints.log" action="start"
      emacsmode="true" loglevel="warn"/>
    <antcall target="javadoc-strict"/>
    <record name="javadoc-complaints.log" action="stop"/>
    <loadfile srcFile="javadoc-complaints.log" property="javadoc.complaints">
      <filterchain>
        <!-- only interested in lines that are errors or warnings -->
        <linecontainsregexp>
            <regexp pattern=":[0-9]+: "/>
        </linecontainsregexp>
        <!-- ignore: unwrap does not exist until JDK1.6 -->
        <linecontains negate="true">
          <contains value="Tag @link: can't find unwrap(Class)"/>
        </linecontains>
        <!-- ignore: Statement.closeOnCompletion does not exist until JDK1.7 -->
        <linecontains negate="true">
          <contains value="Tag @link: can't find closeOnCompletion()"/>
        </linecontains>
        <!-- ignore: ResultSet.isClosed does not exist until JDK1.6 -->
        <linecontains negate="true">
          <contains value="Tag @link: can't find isClosed()"/>
        </linecontains>
        <!-- ignore: FactoryJdbc4Impl is only built in JDK1.6 -->
        <linecontains negate="true">
          <contains value="FactoryJdbc4Impl.java"/>
        </linecontains>
        <!-- ignore: FactoryJdbc41Impl is only built in JDK1.7 -->
        <linecontains negate="true">
          <contains value="FactoryJdbc41Impl.java"/>
        </linecontains>
        <!-- ignore: FactoryJdbc4Plus is only built in JDK1.6 -->
        <linecontains negate="true">
          <contains value="FactoryJdbc4Plus.java"/>
        </linecontains>
        <!-- ignore: UtilCompatibleJdk16 is only built in JDK1.6 -->
        <linecontains negate="true">
          <contains value="UtilCompatibleJdk16.java"/>
        </linecontains>
        <!-- ignore complaints about a variant of Arrays.binarySearch introduced
             in JDK1.6 -->
        <linecontains negate="true">
          <contains value="Tag @link: can't find binarySearch"/>
        </linecontains>
        <striplinebreaks />
      </filterchain>
    </loadfile>
    <fail if="javadoc.complaints"
        message="Javadoc reported warnings or errors; see javadoc-complaints.log for details: ${javadoc.complaints}"/>
    <delete file="javadoc-complaints.log"/>
    <!-- Save disk space since we're just checking. -->
    <antcall target="cleanJavadoc"/>
  </target>

  <target name="cleanJavadoc">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${javadoc.dir}" includes="**/*"/>
    </delete>
  </target>

  <target name="checkCodeFormatting">
    <!-- Only runs on unix currently, because it's a shell script.
         On Windows/cygwin, you can run bin/checkFile.sh manually. -->
    <exec osfamily="unix" executable="${basedir}/bin/checkFile.sh" failonerror="true">
        <arg line="--under ."/>
    </exec>
  </target>

  <target name="workbench-dist"/>

  <!--
       Retroweaver re-engineers JDK 1.5-compatible code so it can run under
       JDK 1.4. This task compiles all core and test classes under 1.5 then
       runs retroweaver to make them 1.4 compatible.

       If you only intend to run on JDK 1.5, there's no need to call this task.

       The inputs to this process are the mondrian.jar file (containing core
       files) and the testclasses directory (containing test classes).

       The outputs from this process are the mondrian-jdk14.jar file
       and the testclasses-jdk14 directory.

       Note that, to keep things sane, this task does not modify classes in
       place.

       After you've run this task, you can invoke 'ant test' from a JDK 1.4 and
       all the tests will run. You should also be able replace mondrian.jar with
       mondrian-jdk14.jar and retroweaver-rt.jar (retroweaver's runtime library)
       in your web application and run it, but I haven't tried
       that. Exercise for the reader.

       Choosing the right ant version is a bit tricky. The retroweaver task
       requires ant-1.6.5 or higher (and JDK 1.5), but when you run the
       regression under JDK 1.4, you must use ant-1.6.0. Later versions of
       ant include junit4, which requires JDK 1.5.
    -->
  <target name="retroweave" depends="jar, compile.tests">
    <taskdef name="retroweaver"
        classname="net.sourceforge.retroweaver.ant.RetroWeaverTask">
      <classpath>
        <pathelement location="${lib.dir}/asm.jar" />
        <pathelement location="${lib.dir}/asm-commons.jar" />
        <pathelement location="${lib.dir}/asm-util.jar" />
        <pathelement location="${lib.dir}/retroweaver.jar" />
        <pathelement location="${lib.dir}/retroweaver-rt.jar" />
        <pathelement location="${lib.dir}/backport-util-concurrent.jar" />
      </classpath>
    </taskdef>

    <delete quiet="true">
      <fileset dir="." includes="${jar-jdk14.file}" />
      <fileset dir="${testclasses-jdk14.dir}" />
      <fileset dir="." includes="${lib.dir}/olap4j-jdk14.jar" />
    </delete>

    <mkdir dir="${testclasses-jdk14.dir}"/>

    <retroweaver inputjar="${in.jar.file}" outputjar="${out.jar.file}" />
    <retroweaver srcdir="${testclasses.dir}" destdir="${testclasses-jdk14.dir}" />
    <retroweaver inputjar="${olap4j.in.jar.file}" outputjar="${olap4j.out.jar.file}" />
  </target>

</project>

<!-- End build.xml -->
